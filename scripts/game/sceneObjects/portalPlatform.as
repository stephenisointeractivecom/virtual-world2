package scripts.game.sceneObjects{	import flash.display.Sprite;	import flash.events.*;	import flash.display.Stage;	import flash.geom.Point;	import flash.display.BitmapData;	import flash.geom.Rectangle;	import scripts.game.particles.portalParticleA;	//	public class portalPlatform extends Sprite {		private var pRoot:Object = null;		private var pRoomObj:Object = null;		private var pActive:Boolean = false;		private var pWaitToJump:Boolean = false;		private var pState:int = 0;		private var pCycle1:int = 0;		private var pCycle2:int = 0;		private var pCycle3:int = 0;		private var x1:int = 0;		private var y1:int = 0;		private var pId:int = 0;		private var pName:String = "";		//		public function portalPlatform():void {		}		//		public function init(vRoot:Object, vRoomObj:Object, vLayer:Object, pSwfTarget):void {			//trace("portalPlatform: init");			pRoot = vRoot;			pRoomObj = vRoomObj;			pName = this.name;			pCycle2 = 0;			x1 = this.x;			y1 = this.y;			var nameArray = pName.split("_");			pId = nameArray[1];			pActive = false;			pWaitToJump = false;			this.visible = false;		}		//		public function enterframe():void {			if (pState ==-1) {				return;			}			if (! pRoomObj) {				deleteMe();				return;			}			var onScreen:Boolean = pRoomObj.pointOnScreen(x1,y1);			if (onScreen) {				if (pActive) {					createParticles();				} else {					checkActivate();				}				if (pWaitToJump) {					waitToJump();					checkDeactivate();				}			}		}		//		private function checkActivate():void {			var vClose:Boolean = closeToAvatar();			if (vClose) {				var dataArray1:Array = [pId];				pWaitToJump = true;				pCycle3 = 0;				pActive = true;				createBeam();				pRoot.sendArrayCommandAll("portalActivate", dataArray1);			}		}		//		private function checkDeactivate():void {			var vClose:Boolean = closeToAvatar();			if (! vClose && pRoot) {				var dataArray2:Array = [pId];				pRoot.sendArrayCommandAll("portalDeactivate", dataArray2);				portalDeactivate();			}		}		//		private function closeToAvatar():Boolean {			var vClose:Boolean = false;			if (pRoot) {				if (pRoot.pMyAvatar) {					var distx:int = Math.abs(pRoot.pMyAvatar.x1 - x1);					var disty:int = Math.abs(pRoot.pMyAvatar.y1 - y1);					vClose = (distx < 50 && disty <50);				}			}			return (vClose);		}		//sent by other user		public function portalActivate():void {			trace("portalActivate");			pActive = true;			createBeam();		}		//		private function createBeam():void {			var obj:Object = new portalBeamMC  ;			obj.x = this.x;			obj.y = this.y;			pRoomObj.pL3Interactive.addChild(obj);		}		//;		public function portalDeactivate():void {			trace("portalDeactivate");			pActive = false;			pActive = false;			pWaitToJump = false;			pCycle3 = 0;			pCycle1 = 0;		}		//		private function createParticles():void {			pCycle2++;			var obj:Object = new portalParticleA  ;			var nme:String = "p" + pId + "_s_" + pCycle2;			obj.init(pRoot, pRoomObj,x1, y1);			pRoomObj.pL3Interactive.addChild(obj);		}		//;		private function waitToJump():void {			if (pState == -1) {				return;			}			if (! pWaitToJump || Math.abs(pRoot.pMyAvatar.dx) > .2) {				return;			}			pCycle3++;			if (pCycle3 > 30) {				trace("Portal platform jump");				pState = -1;				var dataArray2:Array = [pId];				pRoot.sendArrayCommandAll("portalDeactivate", dataArray2);				if (pName == "pp_starAlign") {					pRoot.loadSideScrollScene("starAlign", 100, 260);				} else {					//pRoot.wayPointJump("map", "portal");					pRoot.loadGameStarAlign();				}			}		}		//		public function deleteMe():void {			//trace ("----------------------->Portal platform delete:" + pName);			if (pState != -1) {				pRoot = null;				pRoomObj = null;				pState = -1;				pActive = false;				pWaitToJump = false;				pCycle1 = 0;				pCycle2 = 0;				pCycle3 = 0;			}		}		//	}}//