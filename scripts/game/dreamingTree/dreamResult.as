package scripts.game.dreamingTree{	import flash.display.MovieClip;	import flash.events.*;	import flash.display.Stage;	public class dreamResult extends MovieClip {		private var pRoot:Object = null;		private var pRoomObj:Object = null;		private var pScale:Number = 1;		private var pState = 0;		private var x1:Number = 0;		private var y1:Number = 0;		//		public function dreamResult():void {			trace("dreamResult construct");			stop();		}		public function init(vRoot:Object, vRoomObj:Object):void {			pRoot = vRoot;			pRoomObj = vRoomObj;			this.addEventListener(MouseEvent.MOUSE_DOWN, mousedown);		}		//		private function mousedown(e:MouseEvent):void {			if (pState ==0) {				openDream();				return;			}			if (pState ==1) {				closeDream();			}		}		//		public function enterframe():void {			switch (pState) {				case -1 :					break;				case 0 :					followAvatar();					break;				case 1 :					followAvatar();					break;				case 2 :					moveToDock();					break;			}		}		//		private function followAvatar():void {			x1 = pRoot.pMyAvatar.x1;			y1 = pRoot.pMyAvatar.y1 - 130;			this.x = x1;			this.y = y1;		}		//		private function openDream():void {			this.gotoAndPlay(2);			pState = 1;		}		//		private function closeDream():void {			pState = 2;			moveToDock();		}		//		private function moveToDock():void {			var diffx = Math.abs(pRoomObj.pScrollX + 1000 - x1);			var diffy = Math.abs(pRoomObj.pScrollY + 500 - y1);			x1 = x1 + diffx / 10;			y1 = y1 + diffy / 10;			if (pScale > .05) {				pScale = pScale - .05;			}			this.scaleX = pScale;			this.scaleY = pScale;			this.alpha = pScale;			this.x = x1;			this.y = y1;			if (diffx < 1 && diffy<1) {				deleteMe();			}		}		//		public function deleteMe():void {			if (pState !=-1) {				pState = -1;				pRoot = null;				pRoomObj = null;				if (parent) {					parent.removeChild(this);				}			}		}		//	}	//}////