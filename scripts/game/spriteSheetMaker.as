package scripts.game{	import flash.display.MovieClip;	import flash.events.*;	import flash.display.Stage;	import flash.text.TextField;	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.geom.Matrix;	import flash.geom.Rectangle;	import flash.geom.Point;	import flash.net.SharedObject;	import flash.system.System;	import flash.net.*;	import flash.display.*;	import flash.events.Event;	public class spriteSheetMaker extends MovieClip {		private var pRoot:Object=null;		private var pArrayName:String="";		private var pWidth:int=0;		private var pHeight:int=0;		private var regX:int=0;		private var regY:int=0;		private var swfFrame:int=0;		private var swfFrames:int=0;		private var pSheetArray:Array=[];		//-------------------------------------------------------		//-------------------------------------------------------		//init		//-------------------------------------------------------		//-------------------------------------------------------		public function spriteSheetMaker ():void {		}		//		public function init (vRoot:Object , vArrayName:String):void {			//trace ("spriteSheet packer: init = " + vArrayName);			pRoot=vRoot;			pArrayName = vArrayName;			pWidth = this.width;			pHeight = this.height;			swfFrames = this.totalFrames;			this.addEventListener (Event.ENTER_FRAME,cycleSwfAnim);			this.visible = false;			pRoot.addChild(this);		}		//-------------------------------------------------------		//-------------------------------------------------------		//load the next frame of the animation and convert it		//-------------------------------------------------------		//-------------------------------------------------------		private function cycleSwfAnim (event:Event):void {			swfFrame++;			//trace (swfFrame);			if (swfFrame < swfFrames + 1) {				this.gotoAndStop (swfFrame);				grabBitmap ();			} else {				pRoot.spriteSheetDone(pArrayName , pSheetArray);				deleteMe ();			}		}		//-------------------------------------------------------		//-------------------------------------------------------		//Convert fram (vector, bitmap, whatever is on the frame) into a bitmadata object		//-------------------------------------------------------		//-------------------------------------------------------		private function grabBitmap ():void {			var bmd:BitmapData=new BitmapData(pWidth,pHeight,true, 0x00000000);			bmd.draw (this);			pSheetArray.push (bmd);		}		//		public function deleteMe ():void {			this.removeEventListener (Event.ENTER_FRAME,cycleSwfAnim);			pRoot = null;			pMc=null;			pArrayName = null;			pSheetArray = null;			if (parent) {				parent.removeChild (this);			}		}		//	}}//