/* * Int64 for ActionScript * Ported by: AAA * Ported from: See below *//* * A JavaScript implementation of the Secure Hash Algorithm, SHA-512, as defined * in FIPS 180-2 * Version 2.2 Copyright Anonymous Contributor, Paul Johnston 2000 - 2009. * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet * Distributed under the BSD License * See http://pajhome.org.uk/crypt/md5 for details. */package scripts.encryption{        public class Int64 {                public var h;                public var l;                public function Int64(h, l) {                        this.h = h;                        this.l = l;                }                public function copy(src) {                        this.h = src.h;                        this.l = src.l;                }                public function rrot(x, shift) {                        this.l = (x.l >>> shift) | (x.h << (32-shift));                        this.h = (x.h >>> shift) | (x.l << (32-shift));                }                public function revrrot(x, shift) {                        this.l = (x.h >>> shift) | (x.l << (32-shift));                        this.h = (x.l >>> shift) | (x.h << (32-shift));                }                public function shr(x, shift) {                        this.l = (x.l >>> shift) | (x.h << (32-shift));                        this.h = (x.h >>> shift);                }                public function add(x, y) {                        var w0 = (x.l & 0xffff) + (y.l & 0xffff);                        var w1 = (x.l >>> 16) + (y.l >>> 16) + (w0 >>> 16);                        var w2 = (x.h & 0xffff) + (y.h & 0xffff) + (w1 >>> 16);                        var w3 = (x.h >>> 16) + (y.h >>> 16) + (w2 >>> 16);                        this.l = (w0 & 0xffff) | (w1 << 16);                        this.h = (w2 & 0xffff) | (w3 << 16);                }                public function add4(a, b, c, d) {                        var w0 = (a.l & 0xffff) + (b.l & 0xffff) + (c.l & 0xffff) + (d.l & 0xffff);                        var w1 = (a.l >>> 16) + (b.l >>> 16) + (c.l >>> 16) + (d.l >>> 16) + (w0 >>> 16);                        var w2 = (a.h & 0xffff) + (b.h & 0xffff) + (c.h & 0xffff) + (d.h & 0xffff) + (w1 >>> 16);                        var w3 = (a.h >>> 16) + (b.h >>> 16) + (c.h >>> 16) + (d.h >>> 16) + (w2 >>> 16);                        this.l = (w0 & 0xffff) | (w1 << 16);                        this.h = (w2 & 0xffff) | (w3 << 16);                }                public function add5(a, b, c, d, e) {                        var w0 = (a.l & 0xffff) + (b.l & 0xffff) + (c.l & 0xffff) + (d.l & 0xffff) + (e.l & 0xffff);                        var w1 = (a.l >>> 16) + (b.l >>> 16) + (c.l >>> 16) + (d.l >>> 16) + (e.l >>> 16) + (w0 >>> 16);                        var w2 = (a.h & 0xffff) + (b.h & 0xffff) + (c.h & 0xffff) + (d.h & 0xffff) + (e.h & 0xffff) + (w1 >>> 16);                        var w3 = (a.h >>> 16) + (b.h >>> 16) + (c.h >>> 16) + (d.h >>> 16) + (e.h >>> 16) + (w2 >>> 16);                        this.l = (w0 & 0xffff) | (w1 << 16);                        this.h = (w2 & 0xffff) | (w3 << 16);                }        }}